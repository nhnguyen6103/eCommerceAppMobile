// Generated by Dagger (https://dagger.dev).
package com.javaproject.mobile.di;

import com.javaproject.mobile.data.network.ProductApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class NetworkModule_ProductServiceFactory implements Factory<ProductApi> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProductServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ProductApi get() {
    return productService(retrofitProvider.get());
  }

  public static NetworkModule_ProductServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProductServiceFactory(retrofitProvider);
  }

  public static ProductApi productService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.productService(retrofit));
  }
}
