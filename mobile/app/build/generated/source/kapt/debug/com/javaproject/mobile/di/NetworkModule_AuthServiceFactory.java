// Generated by Dagger (https://dagger.dev).
package com.javaproject.mobile.di;

import com.javaproject.mobile.data.network.AuthApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class NetworkModule_AuthServiceFactory implements Factory<AuthApi> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_AuthServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public AuthApi get() {
    return authService(retrofitProvider.get());
  }

  public static NetworkModule_AuthServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_AuthServiceFactory(retrofitProvider);
  }

  public static AuthApi authService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.authService(retrofit));
  }
}
