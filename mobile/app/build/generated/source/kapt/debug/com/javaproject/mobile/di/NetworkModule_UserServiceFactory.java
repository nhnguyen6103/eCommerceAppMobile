// Generated by Dagger (https://dagger.dev).
package com.javaproject.mobile.di;

import com.javaproject.mobile.data.network.UserApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class NetworkModule_UserServiceFactory implements Factory<UserApi> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_UserServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public UserApi get() {
    return userService(retrofitProvider.get());
  }

  public static NetworkModule_UserServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_UserServiceFactory(retrofitProvider);
  }

  public static UserApi userService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.userService(retrofit));
  }
}
